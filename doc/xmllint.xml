<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl"
   href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
    
    <!ENTITY xmllint "<command>xmllint</command>">
]>
<refentry>
  <refentryinfo>
    <title>xmllint Manual</title>
    <copyright>
      <year>2001</year>
    </copyright>
    <copyright>
      <year>2004</year>
    </copyright>
    <author>
      <firstname>John</firstname>
      <surname>Fleck</surname>
    </author>
    <address><email>jfleck@inkstain.net</email></address>
    <author>
      <firstname>Ziying</firstname>
      <surname>Sherwin</surname>
    </author>
    <address><email>sherwin@nlm.nih.gov</email></address>
    <author>
      <firstname>Heiko</firstname>
      <surname>Rupp</surname>
    </author>
    <address><email>hwr@pilhuhn.de</email></address>
    
    <releaseinfo>This is release 0.5 of the xmllint Manual.</releaseinfo>
  </refentryinfo>

  <refmeta>
    <refentrytitle>xmllint</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>xmllint</refname>
    <refpurpose>command line <acronym>XML</acronym> tool</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>xmllint</command>
      <group choice="opt">
        <arg choice="plain"><option>--version</option></arg>
        <arg choice="plain"><option>--debug</option></arg>
        <arg choice="plain"><option>--shell</option></arg>
        <arg choice="plain"><option>--debugent</option></arg>
        <arg choice="plain"><option>--copy</option></arg>
        <arg choice="plain"><option>--recover</option></arg>
        <arg choice="plain"><option>--noent</option></arg>
        <arg choice="plain"><option>--noout</option></arg>
        <arg choice="plain"><option>--nonet</option></arg>
        <arg choice="plain"><option>--path "<replaceable class="option">PATHS</replaceable>"</option></arg>
        <arg choice="plain"><option>--load-trace</option></arg>
        <arg choice="plain"><option>--htmlout</option></arg>
        <arg choice="plain"><option>--nowrap</option></arg>
        <arg choice="plain"><option>--valid</option></arg>
        <arg choice="plain"><option>--postvalid</option></arg>
        <arg choice="plain"><option>--dtdvalid <replaceable class="option">URL</replaceable></option></arg>
        <arg choice="plain"><option>--dtdvalidfpi <replaceable class="option">FPI</replaceable></option></arg>
        <arg choice="plain"><option>--timing</option></arg>
        <arg choice="plain"><option>--output <replaceable class="option">FILE</replaceable></option></arg>
        <arg choice="plain"><option>--repeat</option></arg>
        <arg choice="plain"><option>--insert</option></arg>
        <arg choice="plain"><option>--compress</option></arg>
        <arg choice="plain"><option>--html</option></arg>
        <arg choice="plain"><option>--xmlout</option></arg>
        <arg choice="plain"><option>--push</option></arg>
        <arg choice="plain"><option>--memory</option></arg>
        <arg choice="plain"><option>--maxmem <replaceable class="option">NBBYTES</replaceable></option></arg>
        <arg choice="plain"><option>--nowarning</option></arg>
        <arg choice="plain"><option>--noblanks</option></arg>
        <arg choice="plain"><option>--nocdata</option></arg>
        <arg choice="plain"><option>--format</option></arg>
        <arg choice="plain"><option>--encode <replaceable class="option">ENCODING</replaceable></option></arg>
        <arg choice="plain"><option>--dropdtd</option></arg>
        <arg choice="plain"><option>--nsclean</option></arg>
        <arg choice="plain"><option>--testIO</option></arg>
        <arg choice="plain"><option>--catalogs</option></arg>
        <arg choice="plain"><option>--nocatalogs</option></arg>
        <arg choice="plain"><option>--auto</option></arg>
        <arg choice="plain"><option>--xinclude</option></arg>
        <arg choice="plain"><option>--noxincludenode</option></arg>
        <arg choice="plain"><option>--loaddtd</option></arg>
        <arg choice="plain"><option>--dtdattr</option></arg>
        <arg choice="plain"><option>--stream</option></arg>
        <arg choice="plain"><option>--walker</option></arg>
        <arg choice="plain"><option>--pattern <replaceable class="option">PATTERNVALUE</replaceable></option></arg>
        <arg choice="plain"><option>--chkregister</option></arg>
        <arg choice="plain"><option>--relaxng <replaceable class="option">SCHEMA</replaceable></option></arg>
        <arg choice="plain"><option>--schema <replaceable class="option">SCHEMA</replaceable></option></arg>
        <arg choice="plain"><option>--c14n</option></arg>
      </group>
      <arg choice="req" rep="repeat"><replaceable>XML-FILE(S)</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>xmllint</command>
      <arg choice="plain"><option>--help</option></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1 id="introduction">
    <title>DESCRIPTION</title>
    <para>
      The &xmllint; program parses one or more XML files, specified on the
      command line as <replaceable>XML-FILE</replaceable> (or the standard
      input if the filename provided is - ). It prints various
      types of output, depending upon the options selected. It is useful for
      detecting errors both in <acronym>XML</acronym> code and in
      the <acronym>XML</acronym> parser itself.
    </para>

    <para>
      It is included in <application>libxml2</application>.
    </para>
  </refsect1>
  <refsect1 id="options">
    <title>OPTIONS</title>
    <variablelist>
      <varlistentry>
	<term><option>--help</option></term>
	<listitem>
	  <simpara>Print out a a short usage summary for &xmllint;.</simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--version</option></term>
	<listitem>
	  <simpara>
	    Display the version of
	    <application>libxml2</application> used.
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--debug</option></term>
	<listitem>
	  <simpara>
	    Parse a file and output an annotated tree of the
	    in-memory version of the document.
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--shell</option></term>
	<listitem>
	  <simpara>
	    Run a navigating shell. Details on available commands in shell mode
	    are below.
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--debugent</option></term>
	<listitem>
	  <simpara>
	    Debug the entities defined in the document.
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--copy</option> </term>
	<listitem>
	  <simpara>
	    Test the internal copy implementation.
	  </simpara>
	</listitem>
      </varlistentry>
    
      
      <varlistentry>
	<term><option>--recover</option></term>
	<listitem>
	  <simpara>
	    Output any parsable portions of an invalid
	    document.
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--noent</option></term>
	<listitem>
	  <simpara>
	    Substitute entity values for entity
	    references. By default, &xmllint; leaves entity
	    references in place.
	  </simpara>
	</listitem>
      </varlistentry>
   
      <varlistentry>
	<term><option>--nocdata</option></term>
	<listitem>
	  <simpara>
	    Substitute CDATA section by equivalent text nodes.
	  </simpara>
	</listitem>
      </varlistentry>
   
      <varlistentry>
	<term><option>--nsclean</option></term>
	<listitem>
	  <simpara>
	    Remove redundant namespace declarations.
	  </simpara>
	</listitem>
      </varlistentry>
   
      <varlistentry>
	<term><option>--noout</option></term>
	<listitem>
	  <simpara>
	    Suppress output. By default, &xmllint;
	    outputs the result tree.
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--nonet</option></term>
	<listitem>
	  <simpara>
	    Do not use the Internet to fetch <acronym>DTD</acronym>s or entities.
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term> <option>--path</option> "<replaceable class="option">PATHS</replaceable>"</term>
	<listitem>
	  <simpara>
	    Use the list (separated by space or colon) of filesystem path
	specified by <replaceable>PATHS</replaceable>  to
	load <acronym>DTD</acronym>s or entities .
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--load-trace</option></term>
	<listitem>
	  <simpara>
	    Display to stderr all the documents loaded during the processing.
	  </simpara>
	</listitem>
      </varlistentry>

    <varlistentry>
	<term><option>--htmlout</option></term>
	<listitem>
	  <simpara>
	    Output results as an <acronym>HTML</acronym>
	    file. This causes &xmllint; to output
	    the necessary <acronym>HTML</acronym> tags surrounding the result tree
	    output so the results can be displayed in a browser. 
	  </simpara>
	</listitem>
      </varlistentry>

    <varlistentry>
	<term><option>--nowrap </option></term>
	<listitem>
	  <simpara>
	    Do not output <acronym>HTML</acronym> doc wrapper.
	  </simpara>
	</listitem>
      </varlistentry>

<varlistentry>
	<term><option>--valid</option></term>
	<listitem>
	  <simpara>
	    Determine if the document is a valid instance
	    of the included Document Type Definition (<acronym>DTD</acronym>).
	    A <acronym>DTD</acronym> to be validated against also can be specified at
	    the command line using the <option>--dtdvalid</option> option. By
	    default, &xmllint; also checks to determine if the
	    document is well-formed.
	  </simpara>
	</listitem>
      </varlistentry>
   
 <varlistentry>
	<term><option>--postvalid</option></term>
	<listitem>
	  <simpara>
	    Validate after parsing is completed.
	  </simpara>
	</listitem>
      </varlistentry>
   
    <varlistentry>
	<term> <option>--dtdvalid</option> <replaceable class="option">URL</replaceable></term>
	<listitem>
	  <simpara>
	    Use the <acronym>DTD</acronym>
	    specified by <replaceable>URL</replaceable> for
      validation.
	  </simpara>
	</listitem>
      </varlistentry>
   
    <varlistentry>
	<term> <option>--dtdvalidfpi</option> <replaceable class="option">FPI</replaceable></term>
	<listitem>
	  <simpara>
	    Use the <acronym>DTD</acronym>
	    specified by the Public Identifier <replaceable>FPI</replaceable>
	    for validation, note that this
      will require a Catalog exporting that Public Identifier to work.
	  </simpara>
	</listitem>
      </varlistentry>
   
     <varlistentry>
	<term><option>--timing</option></term>
	<listitem>
	  <simpara>
	    Output information about the time it takes &xmllint;
	    to perform the various steps.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--output</option> <replaceable class="option">FILE</replaceable></term>
	<listitem>
	  <simpara>Define a file path where xmllint will save the result of
	  parsing. Usually the programs build a tree and save it on stdout, with
	  this option the result <acronym>XML</acronym> instance will be saved onto
	  a file.</simpara>
	</listitem>
      </varlistentry>
   <varlistentry>
	<term><option>--repeat</option></term>
	<listitem>
	  <simpara>
	    Repeat 100 times, for timing or profiling.
	  </simpara>
	</listitem>
      </varlistentry>
   
    <varlistentry>
	<term><option>--insert</option></term>
	<listitem>
	  <simpara>
	    Test for valid insertions.
	  </simpara>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--compress</option></term>
	<listitem>
	  <simpara>
	    Turn on <application>gzip</application> compression of output.
	  </simpara>
	</listitem>
      </varlistentry>
   
    <varlistentry>
	<term><option>--html</option></term>
	<listitem>
	  <simpara>
	    Use the <acronym>HTML</acronym> parser.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--xmlout</option></term>
	<listitem>
	  <simpara>Used in conjunction with <option>--html</option>. Usually
  when <acronym>HTML</acronym> is parsed the document is saved with
  the <acronym>HTML</acronym> serializer, but with this option the resulting
  document is saved with the <acronym>XML</acronym> serializer. This is
  primarily used to generate <acronym>XHTML</acronym>
  from <acronym>HTML</acronym> input.</simpara>
	</listitem>
      </varlistentry>
    <varlistentry>
	<term><option>--push</option></term>
	<listitem>
	  <simpara>
	    Use the push mode of the parser.
	  </simpara>
	</listitem>
      </varlistentry>
   

    <varlistentry>
	<term><option>--memory</option></term>
	<listitem>
	  <simpara>
	   Parse from memory.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--maxmem</option> <replaceable class="option">NNBYTES</replaceable></term>
	<listitem>
	  <simpara>Test the parser memory
  support. <replaceable>NNBYTES</replaceable> is the maximum number of bytes the
  library is allowed to allocate. This can also be used to make sure batch
  processing of <acronym>XML</acronym> files will not exhaust the virtual memory
  of the server running them.</simpara>
	</listitem>
      </varlistentry>
    <varlistentry>
	<term><option>--nowarning</option></term>
	<listitem>
	  <simpara>
	   Do not emit warnings from the parser and/or validator.
	  </simpara>
	</listitem>
      </varlistentry>

    <varlistentry>
	<term><option>--noblanks</option></term>
	<listitem>
	  <simpara>
	   Drop ignorable blank spaces.
	  </simpara>
	</listitem>
      </varlistentry>

    <varlistentry>
	<term><option>--format</option></term>
	<listitem>
	  <simpara>
	   Reformat and reindent the output. The <envar>XMLLINT_INDENT</envar>
	   environment variable controls the indentation (default 
	   value is two spaces &quot;  &quot;).
	  </simpara>
	</listitem>
      </varlistentry>

    <varlistentry>
	<term><option>--testIO</option></term>
	<listitem>
	  <simpara>
	   Test user input/output support.
	  </simpara>
	</listitem>
      </varlistentry>

    <varlistentry>
      <term><option>--encode</option> <replaceable class="option">ENCODING</replaceable></term>
	<listitem>
	  <simpara>
	   Output in the given encoding.
	  </simpara>
	</listitem>
      </varlistentry>
    
    <varlistentry>
	<term><option>--catalogs</option></term>
	<listitem>
	  <simpara>
	   Use the catalogs from <envar>SGML_CATALOG_FILES</envar>.
	   Otherwise <filename>/etc/xml/catalog</filename>
	   is used by default.
	  </simpara>
	</listitem>
      </varlistentry>

    <varlistentry>
	<term><option>--nocatalogs</option></term>
	<listitem>
	  <simpara>
	   Do not use any catalogs.
	  </simpara>
	</listitem>
      </varlistentry>
    
    <varlistentry>
	<term><option>--auto</option></term>
	<listitem>
	  <simpara>
	   Generate a small document for testing purposes.
	  </simpara>
	</listitem>
      </varlistentry>

    <varlistentry>
	<term><option>--xinclude</option></term>
	<listitem>
	  <simpara>
	   Do XInclude processing.
	  </simpara>
	</listitem>
      </varlistentry>
    <varlistentry>
	<term><option>--noxincludenode</option></term>
	<listitem>
	  <simpara>
	   Do XInclude processing but do not generate XInclude start and end
	   nodes.
	  </simpara>
	</listitem>
      </varlistentry>
    <varlistentry>
	<term><option>--loaddtd</option></term>
	<listitem>
	  <simpara>
	   Fetch external <acronym>DTD</acronym>.
	  </simpara>
	</listitem>
      </varlistentry>
    
    <varlistentry>
	<term><option>--dtdattr</option></term>
	<listitem>
	  <simpara>
	   Fetch external <acronym>DTD</acronym> and populate the tree with
	   inherited attributes.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--dropdtd</option></term>
	<listitem>
	  <simpara>
	    Remove <acronym>DTD</acronym> from output.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--stream</option></term>
	<listitem>
	  <simpara>Use streaming API - useful when  used  in combination with
      <option>--relaxng</option> or <option>--valid</option> options
      for validation of files that are
	    too large to be held in memory.</simpara> 
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--walker</option></term>
	<listitem>
	  <simpara>Test the walker module, which is a reader interface but for a
    document tree, instead of using the reader <acronym>API</acronym> on an
    unparsed document it works on a existing in-memory tree. Used in
    debugging.</simpara> 
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--chkregister</option></term>
	<listitem>
	  <simpara>Turn on node registration. Useful for developers testing
	  <application>libxml2</application> node tracking code.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--pattern</option> <replaceable class="option">PATTERNVALUE</replaceable></term>
	<listitem>
	  <simpara>Used to exercise the pattern recognition engine, which can be
	  used with the reader interface to the parser. It allows to select some
	  nodes in the document based on an XPath (subset) expression. Used for
	  debugging.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--relaxng</option> <replaceable class="option">SCHEMA</replaceable></term>
	<listitem>
	  <simpara>Use RelaxNG file named <replaceable class="option">SCHEMA</replaceable> for
	  validation.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>--schema</option> <replaceable>SCHEMA</replaceable></term>
	<listitem>
	  <simpara>Use a W3C XML Schema file named <replaceable>SCHEMA</replaceable>
	    for validation.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
      <option>--c14n</option></term>
	<listitem>
	  <simpara>Use the W3C XML Canonicalisation (C14N) to
serialize the result of parsing to stdout. It keeps comments in
the result.</simpara>
	</listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1 id="shell">
    <title>SHELL COMMANDS</title>
    <para>
      &xmllint; offers an interactive shell mode
      invoked with the <option>--shell</option> command. Available commands in
      shell mode include:
    </para>
    <variablelist>
      <varlistentry>
	<term><command>base</command></term>
	<listitem>
	  <simpara>
	    display XML base of the node
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>bye</command></term>
	<listitem>
	  <simpara>
	    leave shell
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>cat <replaceable>NODE</replaceable></command></term>
	<listitem>
	  <simpara>
	    Display node if given or current node.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>cd <replaceable>PATH</replaceable></command></term>
	<listitem>
	  <simpara>
	    Change the current node to <replaceable>PATH</replaceable> (if given
	    and unique) or root if no argument given.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>dir <replaceable>PATH</replaceable></command></term>
	<listitem>
	  <simpara>
	    Dumps information about the node (namespace, attributes, content).
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>du <replaceable>PATH</replaceable></command></term>
	<listitem>
	  <simpara>
	    Show the structure of the subtree under path or the current node.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>exit</command></term>
	<listitem>
	  <simpara>
	    Leave the shell.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>help</command></term>
	<listitem>
	  <simpara>
	    Show this help.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>free</command></term>
	<listitem>
	  <simpara>
	    Display memory usage.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>load <replaceable>FILENAME</replaceable></command></term>
	<listitem>
	  <simpara>
	    Load a new document with the given name.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>ls <replaceable>PATH</replaceable></command></term>
	<listitem>
	  <simpara>
	    List contents of <replaceable>PATH</replaceable> (if given) or the
	    current directory.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>pwd</command></term>
	<listitem>
	  <simpara>
	    Display the path to the current node.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>quit</command></term>
	<listitem>
	  <simpara>
	    Leave the shell.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>save <replaceable>FILENAME</replaceable></command></term>
	<listitem>
	  <simpara>
	    Saves the current document to <replaceable>FILENAME</replaceable> if
	    given or to the original name.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><option>validate</option></term>
	<listitem>
	  <simpara>
	    Check the document for error.
	  </simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><command>write <replaceable>FILENAME</replaceable></command></term>
	<listitem>
	  <simpara>
	    Write the current node to the given filename.
	  </simpara>
	</listitem>
      </varlistentry>
     
    </variablelist>
  </refsect1>
  <refsect1>
    <title>ENVIRONMENT</title>
    <para>On the completion of execution, &xmllint;
    returns the following error codes:</para>
    <variablelist>
      <varlistentry>
	<term><envar>SGML_CATALOG_FILES</envar></term>
	<listitem>
	  <simpara>...</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><envar>XML_CATALOG_FILES</envar></term>
	<listitem>
	  <simpara>Catalog behavior can be changed by redirecting
     queries to the user's own set of catalogs. This can be done by setting
     the <envar>XML_CATALOG_FILES</envar> environment variable to a list of
     catalogs. An empty one should deactivate loading the
     default <filename>/etc/xml/catalog</filename> default catalog.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><envar>XML_DEBUG_CATALOG</envar></term>
	<listitem>
	  <simpara>Setting the environment variable <envar>XML_DEBUG_CATALOG</envar>
    using the command <command>&quot;export XML_DEBUG_CATALOG=&quot;</command>
    outputs debugging information related to catalog operations.</simpara>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><envar>XMLLINT_INDENT</envar></term>
	<listitem>
	  <simpara>...</simpara>
	</listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
  <refsect1>
    <title>DIAGNOSTICS</title>
    <para>On the completion of execution, &xmllint;
    returns the following error codes:</para>
    <variablelist>
      <varlistentry>
        <term><errorcode>0</errorcode></term>
        <listitem>
          <simpara>No error</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>1</errorcode></term>
        <listitem>
          <simpara>Unclassified</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>2</errorcode></term>
        <listitem>
          <simpara>Error in <acronym>DTD</acronym></simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>3</errorcode></term>
        <listitem>
          <simpara>Validation error</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>4</errorcode></term>
        <listitem>
          <simpara>Validation error</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>5</errorcode></term>
        <listitem>
          <simpara>Error in schema compilation</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>6</errorcode></term>
        <listitem>
          <simpara>Error writing output</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>7</errorcode></term>
        <listitem>
          <simpara>Error in pattern (generated when <option>--pattern</option>
     	    option is used)</simpara>
     	  </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>8</errorcode></term>
        <listitem>
          <simpara>Error in Reader registration (generated
          when <option>--chkregister</option> option is used)</simpara>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><errorcode>9</errorcode></term>
          <listitem>
            <simpara>Out of memory error</simpara>
          </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
</refentry>
